# document_AIKIF.py written by Duncan Murray 18/4/2014
# part of AIKIF.codeDocData

import sys
import os
sys.path.append('..//AI')

import cls_programs as prog

sys.path.append('..//..//aspytk')
import lib_file as fle

# because we are calling it several times for testing, clean the files first
#filemap.GetFullFilename(filemap.FindType('LOCATION'), filemap.FindOntology('FILE-PROGRAM')[0]))   	
#filemap.GetFullFilename(filemap.FindType('OBJECT'), filemap.FindOntology('FILE-PROGRAM')[0]))   	
os.remove('..\\data\\core\\LOCATION_SYSTEM-PC-FILE-PROGRAM.CSV')   	
os.remove('..\\data\\core\\OBJECT_SYSTEM-PC-FILE-PROGRAM.CSV')   	



aikifProgs = prog.Programs('AIKIF Programs', 'T:\\user\\dev\\src\\python\\AI')
aikifProgs.add('program.py', 'test program')
aikifProgs.add('fileMapping.py', 'uses ontology to get list of files to save data')
aikifProgs.add('index.py', 'rebuilds indexes')
aikifProgs.add('view.py', 'view the data in AIKIF')
aikifProgs.add('AIKIF_utils.py', 'utils for getting standard file structures (soon to be deprecated)')
aikifProgs.add('AI.py', 'original main entry point - soon to be deprecated')
aikifProgs.add('add.py', 'command line utility to add information - not yet implemented')
aikifProgs.add('dataTools.py', 'data tools to manage database access')
aikifProgs.add('AIKIF_create.py', 'creates default structures with test data')
aikifProgs.add('generateTestData.py', 'Tool to generate various test data')
aikifProgs.add('processRawData.py', 'calls various sub tasks to collect raw data')
aikifProgs.add('loadInfoCourseLectures.py', 'loads course lecture notes into AIKIF')
aikifProgs.add('loadPIM_Filelist.py', 'loads generic filelists into AIKIF - indexing not implemented')
aikifProgs.add('loadCountry_Gdeltproject.py', 'sample load - loads country data into AIKIF')
aikifProgs.add('loadPIM_shoppingList.py', 'sample data - loads a users shopping list into AIKIF')
aikifProgs.add('security.py', 'future module to handle security and privacy settings')


aikifProgs.list()	# get list of all programs
aikifProgs.save()


# List all python programs
allPython = prog.Programs('All Python Programs', 'T:\\user\\dev\\src\\python\\AI\\AI')
fl = fle.GetFileList(['T:\\user\\dev\\src\\python\\AI'], ['*.py'], ["__pycache__", ".git", "\\sympy-master\\", "\\z_bk_python\\", "\\ext-dl\\"], True)
for file in fl:
	allPython.add(file, 'autogenerated list')
#allPython.list()
allPython.save()

# Get list of applications
apps = prog.Programs('Applications', 'C:\\apps')
fl = fle.GetFileList(['C:\\apps'], ['*.exe'], ["\\bk\\"], True)
for file in fl:
	apps.add(file, 'autogenerated list')
apps.list()
apps.save()
